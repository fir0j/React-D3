{"version":3,"sources":["components/DomControl.component.jsx","App.js","index.js"],"names":["DomControl","useState","data","setData","svgRef","useRef","useEffect","select","current","selectAll","join","attr","value","className","ref","map","item","cx","cy","r","stroke","transform","onClick","filter","App","fetch","then","response","json","Object","assign","date","Date","lineChartData","xScale","d3","range","yScale","timeDomain","d","tempMax","high","domain","lineGenerator","x","fill","path","y","low","width","height","colorScale","avg","minAvg","maxAvg","y1","y2","barChartData","radiusScale","arcGenerator","perSliceAngle","Math","PI","length","i","startAngle","endAngle","innerRadius","outerRadius","radialChartData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.778c8c8c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select } from 'd3';\n\nexport const DomControl = () => {\n\tconst [ data, setData ] = useState([ 65, 50, 40, 30, 25, 20 ]);\n\tconst svgRef = useRef();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst svg = select(svgRef.current);\n\t\t\tsvg\n\t\t\t\t.selectAll('circle')\n\t\t\t\t.data(data)\n\t\t\t\t.join('circle')\n\t\t\t\t// these attributes will be applied to all the elements which enters ENTER PHASE as well as UPDATE PHASE of D3\n\t\t\t\t.attr('r', (value) => value)\n\t\t\t\t.attr('cx', 10)\n\t\t\t\t.attr('cy', 10)\n\t\t\t\t.attr('stroke', 'red')\n\t\t\t\t.attr('transform', 'translate(150,75)')\n\t\t\t\t.attr('class', 'fill-current text-orange-200 hover:text-orange-300 cursor-pointer');\n\t\t},\n\t\t[ data ]\n\t);\n\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div>\n\t\t\t\t\t<p>D3 Controlling the SVG DOM</p>\n\t\t\t\t\t<svg ref={svgRef} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>React Controlling the SVG DOM</p>\n\t\t\t\t\t<svg>\n\t\t\t\t\t\t{data.map((item) => (\n\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\tcx=\"10\"\n\t\t\t\t\t\t\t\tcy=\"10\"\n\t\t\t\t\t\t\t\tr={item}\n\t\t\t\t\t\t\t\tstroke=\"red\"\n\t\t\t\t\t\t\t\ttransform=\"translate(150,75)\"\n\t\t\t\t\t\t\t\tclassName=\"fill-current text-orange-200 hover:text-orange-300 cursor-pointer\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t<button className=\"border-2 m-2 p-2\" onClick={() => setData(data.map((item) => item + 5))}>\n\t\t\t\t\tupdate\n\t\t\t\t</button>\n\t\t\t\t<button className=\"border-2 m-2 p-2\" onClick={() => setData(data.filter((item) => item < 40))}>\n\t\t\t\t\tfilter\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useState, useEffect } from 'react';\nimport { DomControl } from './components/DomControl.component';\nimport * as d3 from 'd3';\n\nconst width = 600;\nconst height = 400;\n// const margin = { top: 20, right: 5, bottom: 20, left: 35 };\n\nconst App = () => {\n\tconst [ data, setData ] = useState(null);\n\n\tuseEffect(() => {\n\t\tfetch('https://raw.githubusercontent.com/sxywu/react-d3-example/master/public/sf.json')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response) => {\n\t\t\t\t// modifying just data property of the objects in the data returned. Object.assign(target, source)\n\t\t\t\treturn response.map((item) => Object.assign(item, { date: new Date(item.date) }));\n\t\t\t})\n\t\t\t.then((response) => setData(response));\n\t}, []);\n\n\tconst barChartData = () => {\n\t\tif (!data) return;\n\t\tconst xScale = d3.scaleTime().range([ 0, width ]);\n\t\tconst yScale = d3.scaleLinear().range([ height, 0 ]);\n\t\tconst colorScale = d3.scaleSequential(d3.interpolateSpectral);\n\n\t\tconst timeDomain = d3.extent(data, (d) => d.date);\n\t\tconst tempMax = d3.max(data, (d) => d.high);\n\t\tconst [ minAvg, maxAvg ] = d3.extent(data, (d) => d.avg);\n\t\txScale.domain(timeDomain);\n\t\tyScale.domain([ 0, tempMax ]);\n\t\tcolorScale.domain([ maxAvg, minAvg ]);\n\n\t\t// calculate x, y, height, and fill for each rectangle\n\t\treturn data.map((d) => {\n\t\t\tconst y1 = yScale(d.high);\n\t\t\tconst y2 = yScale(d.low);\n\t\t\treturn {\n\t\t\t\tx: xScale(d.date),\n\t\t\t\ty: y1,\n\t\t\t\theight: y2 - y1,\n\t\t\t\tfill: colorScale(d.avg)\n\t\t\t};\n\t\t});\n\t};\n\n\tconst lineChartData = () => {\n\t\t// create scales\n\t\tconst xScale = d3.scaleTime().range([ 0, width ]);\n\t\tconst yScale = d3.scaleLinear().range([ height, 0 ]);\n\t\tconst timeDomain = d3.extent(data, (d) => d.date);\n\t\tconst tempMax = d3.max(data, (d) => d.high);\n\t\txScale.domain(timeDomain);\n\t\tyScale.domain([ 0, tempMax ]);\n\n\t\t// create and use line generator for high and low temperature\n\t\tconst lineGenerator = d3.line().x((d) => xScale(d.date));\n\t\treturn [\n\t\t\t{\n\t\t\t\tfill: '#eb6a5b',\n\t\t\t\tpath: lineGenerator.y((d) => yScale(d.high))(data)\n\t\t\t},\n\t\t\t{\n\t\t\t\tfill: '#52b6ca',\n\t\t\t\tpath: lineGenerator.y((d) => yScale(d.low))(data)\n\t\t\t}\n\t\t];\n\t};\n\n\tconst radialChartData = () => {\n\t\tconst radiusScale = d3.scaleLinear().range([ 0, width / 2 ]);\n\t\tconst colorScale = d3.scaleSequential(d3.interpolateSpectral);\n\n\t\tconst tempMax = d3.max(data, (d) => d.high);\n\t\tconst [ minAvg, maxAvg ] = d3.extent(data, (d) => d.avg);\n\t\tradiusScale.domain([ 0, tempMax ]);\n\t\tcolorScale.domain([ maxAvg, minAvg ]);\n\n\t\t// one arc per day, innerRadius is low temp, outerRadius is high temp\n\t\tconst arcGenerator = d3.arc();\n\t\tconst perSliceAngle = 2 * Math.PI / data.length;\n\t\treturn data.map((d, i) => {\n\t\t\treturn {\n\t\t\t\tfill: colorScale(d.avg),\n\t\t\t\tpath: arcGenerator({\n\t\t\t\t\tstartAngle: i * perSliceAngle,\n\t\t\t\t\tendAngle: (i + 1) * perSliceAngle,\n\t\t\t\t\tinnerRadius: radiusScale(d.low),\n\t\t\t\t\touterRadius: radiusScale(d.high)\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"flex flex-wrap justify-around\">\n\t\t\t<div className=\"border mt-2\">\n\t\t\t\t{data && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<svg width={width} height={height}>\n\t\t\t\t\t\t\t{barChartData().map((item) => (\n\t\t\t\t\t\t\t\t<rect x={item.x} y={item.y} width=\"2\" height={item.height} fill={item.fill} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"border mt-2\">\n\t\t\t\t{data && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<svg width={width} height={height}>\n\t\t\t\t\t\t\t<path d={lineChartData()[0].path} fill=\"none\" stroke=\"red\" />\n\t\t\t\t\t\t\t<path d={lineChartData()[1].path} fill=\"none\" stroke=\"blue\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"border mt-2\">\n\t\t\t\t{data && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<svg width={width} height={height}>\n\t\t\t\t\t\t\t{radialChartData().map((item) => (\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td={item.path}\n\t\t\t\t\t\t\t\t\tfill={item.fill}\n\t\t\t\t\t\t\t\t\ttransform={`translate(${width / 2}, ${height / 2})`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"border mt-2\">\n\t\t\t\t<DomControl />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/framework/tailwind.custom.css';\nimport './static/styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}