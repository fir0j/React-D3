{"version":3,"sources":["components/LineChart.component.jsx","components/BarChart.component.jsx","components/RadialChart.component.jsx","components/DomControl.component.jsx","App.js","index.js"],"names":["margin","LineChart","state","highs","lows","xScale","d3","range","yScale","lineGenerator","xAxis","scale","tickFormat","yAxis","d","this","refs","xAxisRef","call","yAxisRef","width","height","fill","stroke","strokeWidth","ref","transform","nextProps","prevState","data","timeDomain","date","tempMax","high","domain","x","y","low","Component","colors","chroma","mode","BarChart","bars","colorScale","map","i","key","colorDomain","avg","y1","y2","RadialChart","slices","tempAnnotations","radiusScale","arcGenerator","path","r","textAnchor","temp","perSliceAngle","Math","PI","length","startAngle","endAngle","innerRadius","outerRadius","DomControl","useState","setData","svgRef","useRef","useEffect","select","current","selectAll","join","attr","value","className","item","cx","cy","onClick","filter","App","props","initializeData","fetch","then","response","json","Object","assign","Date","setState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5017218d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nconst width = 650;\nconst height = 400;\nconst margin = { top: 20, right: 5, bottom: 20, left: 35 };\nconst red = '#eb6a5b';\nconst blue = '#52b6ca';\n\nclass LineChart extends Component {\n\t// this state is same as writing this.state = {} inside constructor lifeCycle Method. it's not local variable.\n\tstate = {\n\t\thighs: null, // svg path command for all the high temps\n\t\tlows: null, // svg path command for low temps,\n\n\t\t// d3 will return the following functions for us\n\t\txScale: d3.scaleTime().range([ margin.left, width - margin.right ]),\n\t\tyScale: d3.scaleLinear().range([ height - margin.bottom, margin.top ]),\n\t\tlineGenerator: d3.line()\n\t};\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tif (!nextProps.data) return null; // data hasn't been loaded yet so do nothing\n\t\tconst { data } = nextProps;\n\t\tconst { xScale, yScale, lineGenerator } = prevState;\n\n\t\t// data has changed, so recalculate scale domains\n\t\tconst timeDomain = d3.extent(data, (d) => d.date);\n\t\tconst tempMax = d3.max(data, (d) => d.high);\n\t\txScale.domain(timeDomain);\n\t\tyScale.domain([ 0, tempMax ]);\n\n\t\t// constant parameter\n\t\tlineGenerator.x((d) => xScale(d.date));\n\n\t\t// calculate d attribute for path to draw lines based on LineGenerator.x()\n\t\t// blue line\n\t\tlineGenerator.y((d) => yScale(d.low));\n\t\tconst lows = lineGenerator(data);\n\t\t// red line\n\t\tlineGenerator.y((d) => yScale(d.high));\n\t\tconst highs = lineGenerator(data);\n\n\t\t// return to merge them with our state Object\n\t\treturn { lows, highs };\n\t}\n\n\txAxis = d3.axisBottom().scale(this.state.xScale).tickFormat(d3.timeFormat('%b'));\n\tyAxis = d3.axisLeft().scale(this.state.yScale).tickFormat((d) => `${d}℉`);\n\n\tcomponentDidUpdate() {\n\t\td3.select(this.refs.xAxisRef).call(this.xAxis);\n\t\td3.select(this.refs.yAxisRef).call(this.yAxis);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<svg width={width} height={height}>\n\t\t\t\t<path d={this.state.highs} fill=\"none\" stroke={red} strokeWidth=\"2\" />\n\t\t\t\t<path d={this.state.lows} fill=\"none\" stroke={blue} strokeWidth=\"2\" />\n\t\t\t\t<g>\n\t\t\t\t\t<g ref=\"xAxisRef\" transform={`translate(0, ${height - margin.bottom})`} />\n\t\t\t\t\t<g ref=\"yAxisRef\" transform={`translate(${margin.left}, 0)`} />\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nexport default LineChart;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport chroma from 'chroma-js';\n\nconst width = 650;\nconst height = 400;\nconst margin = { top: 20, right: 5, bottom: 20, left: 35 };\nconst red = '#eb6a5b';\nconst green = '#b6e86f';\nconst blue = '#52b6ca';\nconst colors = chroma.scale([ blue, green, red ]).mode('hsl');\n\nclass BarChart extends Component {\n\tstate = {\n\t\tbars: [], // array of rects\n\t\t// d3 helpers\n\t\txScale: d3.scaleTime().range([ margin.left, width - margin.right ]),\n\t\tyScale: d3.scaleLinear().range([ height - margin.bottom, margin.top ]),\n\t\tcolorScale: d3.scaleLinear()\n\t};\n\n\txAxis = d3.axisBottom().scale(this.state.xScale).tickFormat(d3.timeFormat('%b'));\n\tyAxis = d3.axisLeft().scale(this.state.yScale).tickFormat((d) => `${d}℉`);\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tif (!nextProps.data) return null; // data hasn't been loaded yet so do nothing\n\t\tconst { data } = nextProps;\n\t\tconst { xScale, yScale, colorScale } = prevState;\n\n\t\t// data has changed, so recalculate scale domains\n\t\tconst timeDomain = d3.extent(data, (d) => d.date);\n\t\tconst tempMax = d3.max(data, (d) => d.high);\n\t\tconst colorDomain = d3.extent(data, (d) => d.avg);\n\t\txScale.domain(timeDomain);\n\t\tyScale.domain([ 0, tempMax ]);\n\t\tcolorScale.domain(colorDomain);\n\n\t\t// calculate x and y for each rectangle\n\t\tconst bars = data.map((d) => {\n\t\t\tconst y1 = yScale(d.high);\n\t\t\tconst y2 = yScale(d.low);\n\t\t\treturn {\n\t\t\t\tx: xScale(d.date),\n\t\t\t\ty: y1,\n\t\t\t\theight: y2 - y1,\n\t\t\t\tfill: colors(colorScale(d.avg))\n\t\t\t};\n\t\t});\n\n\t\treturn { bars };\n\t}\n\n\tcomponentDidUpdate() {\n\t\td3.select(this.refs.xAxis).call(this.xAxis);\n\t\td3.select(this.refs.yAxis).call(this.yAxis);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<svg width={width} height={height}>\n\t\t\t\t{this.state.bars.map((d, i) => (\n\t\t\t\t\t<rect key={i} x={d.x} y={d.y} width=\"2\" height={d.height} fill={d.fill} />\n\t\t\t\t))}\n\t\t\t\t<g>\n\t\t\t\t\t<g ref=\"xAxis\" transform={`translate(0, ${height - margin.bottom})`} />\n\t\t\t\t\t<g ref=\"yAxis\" transform={`translate(${margin.left}, 0)`} />\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nexport default BarChart;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport chroma from 'chroma-js';\n\nconst width = 650;\nconst height = 650;\nconst red = '#eb6a5b';\nconst green = '#b6e86f';\nconst blue = '#52b6ca';\nconst colors = chroma.scale([ blue, green, red ]);\n\nclass RadialChart extends Component {\n\tstate = {\n\t\tslices: [], // array of svg path commands, each representing a day\n\t\ttempAnnotations: [],\n\t\t// d3 helpers\n\t\tradiusScale: d3.scaleLinear().range([ 0, width / 2 ]),\n\t\tcolorScale: d3.scaleLinear(),\n\t\tarcGenerator: d3.arc()\n\t};\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tif (!nextProps.data) return null; // data hasn't been loaded yet so do nothing\n\t\tconst { data } = nextProps;\n\t\tconst { radiusScale, colorScale, arcGenerator } = prevState;\n\n\t\t// data has changed, so recalculate scale domains\n\t\tconst tempMax = d3.max(data, (d) => d.high);\n\t\tconst colorDomain = d3.extent(data, (d) => d.avg);\n\t\tradiusScale.domain([ 0, tempMax ]);\n\t\tcolorScale.domain(colorDomain);\n\n\t\t// one arc per day, innerRadius is low temp, outerRadius is high temp\n\t\tconst perSliceAngle = 2 * Math.PI / data.length;\n\t\tconst slices = data.map((d, i) => {\n\t\t\tconst path = arcGenerator({\n\t\t\t\tstartAngle: i * perSliceAngle,\n\t\t\t\tendAngle: (i + 1) * perSliceAngle,\n\t\t\t\tinnerRadius: radiusScale(d.low),\n\t\t\t\touterRadius: radiusScale(d.high)\n\t\t\t});\n\n\t\t\treturn { path, fill: colors(colorScale(d.avg)) };\n\t\t});\n\n\t\tconst tempAnnotations = [ 5, 20, 40, 60, 80 ].map((temp) => {\n\t\t\treturn {\n\t\t\t\tr: radiusScale(temp),\n\t\t\t\ttemp\n\t\t\t};\n\t\t});\n\n\t\treturn { slices, tempAnnotations };\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<svg width={width} height={height}>\n\t\t\t\t<g transform={`translate(${width / 2}, ${height / 2})`}>\n\t\t\t\t\t{this.state.slices.map((d, i) => <path key={i} d={d.path} fill={d.fill} />)}\n\n\t\t\t\t\t{this.state.tempAnnotations.map((d, i) => (\n\t\t\t\t\t\t<g key={i}>\n\t\t\t\t\t\t\t<circle r={d.r} fill=\"none\" stroke=\"#999\" />\n\t\t\t\t\t\t\t<text y={-d.r - 2} textAnchor=\"middle\">\n\t\t\t\t\t\t\t\t{d.temp}℉\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t))}\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nexport default RadialChart;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { select } from 'd3';\n\nexport const DomControl = () => {\n\tconst [ data, setData ] = useState([ 65, 50, 40, 30, 25, 20 ]);\n\tconst svgRef = useRef();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst svg = select(svgRef.current);\n\t\t\tsvg\n\t\t\t\t.selectAll('circle')\n\t\t\t\t.data(data)\n\t\t\t\t.join('circle')\n\t\t\t\t// these attributes will be applied to all the elements which enters ENTER PHASE as well as UPDATE PHASE of D3\n\t\t\t\t.attr('r', (value) => value)\n\t\t\t\t.attr('cx', 10)\n\t\t\t\t.attr('cy', 10)\n\t\t\t\t.attr('stroke', 'red')\n\t\t\t\t.attr('transform', 'translate(150,75)')\n\t\t\t\t.attr('class', 'fill-current text-orange-200 hover:text-orange-300 cursor-pointer');\n\t\t},\n\t\t[ data ]\n\t);\n\n\treturn (\n\t\t<div className=\"mt-20\">\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div>\n\t\t\t\t\t<p>D3 Controlling the SVG DOM</p>\n\t\t\t\t\t<svg ref={svgRef} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>React Controlling the SVG DOM</p>\n\t\t\t\t\t<svg>\n\t\t\t\t\t\t{data.map((item) => (\n\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\tkey={item}\n\t\t\t\t\t\t\t\tcx=\"10\"\n\t\t\t\t\t\t\t\tcy=\"10\"\n\t\t\t\t\t\t\t\tr={item}\n\t\t\t\t\t\t\t\tstroke=\"red\"\n\t\t\t\t\t\t\t\ttransform=\"translate(150,75)\"\n\t\t\t\t\t\t\t\tclassName=\"fill-current text-orange-200 hover:text-orange-300 cursor-pointer\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t<button className=\"border-2 m-2 p-2\" onClick={() => setData(data.map((item) => item + 5))}>\n\t\t\t\t\tupdate\n\t\t\t\t</button>\n\t\t\t\t<button className=\"border-2 m-2 p-2\" onClick={() => setData(data.filter((item) => item < 40))}>\n\t\t\t\t\tfilter\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { Component } from 'react';\nimport LineChart from './components/LineChart.component';\nimport BarChart from './components/BarChart.component';\nimport RadialChart from './components/RadialChart.component';\nimport { DomControl } from './components/DomControl.component';\n\nclass App extends Component {\n\t// LC Method 1:\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: null\n\t\t};\n\t}\n\n\tinitializeData = () => {\n\t\tfetch('https://raw.githubusercontent.com/sxywu/react-d3-example/master/public/sf.json')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response) => {\n\t\t\t\t// modifying just data property of the objects in the data returned. Object.assign(target, source)\n\t\t\t\treturn response.map((item) => Object.assign(item, { date: new Date(item.date) }));\n\t\t\t})\n\t\t\t.then((response) => this.setState({ data: response }));\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.initializeData();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"flex flex-wrap\">\n\t\t\t\t<LineChart data={this.state.data} />\n\t\t\t\t<BarChart data={this.state.data} />\n\t\t\t\t<RadialChart data={this.state.data} />\n\t\t\t\t<DomControl />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/framework/tailwind.custom.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}